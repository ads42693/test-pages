name: Deploy Jekyll with Dynamic Wikis

on:
  push:
    branches: [develop]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          path: main-repo

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          pip install yq

      - name: Load Wiki Config
        id: wiki-config
        run: |
          cd main-repo
          echo "WIKIS=$(yq -o=json '.wikis' config/wikis.yml)" >> $GITHUB_OUTPUT

      - name: Checkout Main Wiki
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}.wiki
          path: wikis/main

      - name: Checkout External Wikis
        run: |
          mkdir -p wikis/external
          echo "${{ steps.wiki-config.outputs.WIKIS }}" | jq -c '.[]' | while read -r wiki; do
            name=$(echo "$wiki" | jq -r '.name')
            url=$(echo "$wiki" | jq -r '.url')
            echo "üîÑ Cloning $name from $url"
            git clone "$url" "wikis/external/$name"
          done

      - name: Setup Ruby environment
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"
          bundler: "2.3.5"
          bundler-cache: true

      - name: Process Wikis
        run: |
          mkdir -p _wikis
          
          # Procesar todas las wikis
          find wikis -mindepth 1 -maxdepth 2 -type d | while read -r wiki_dir; do
            wiki_name=$(basename "$wiki_dir")
            echo "üìÇ Processing $wiki_name..."
            
            # Copiar contenido
            mkdir -p "_wikis/$wiki_name"
            cp -R "$wiki_dir"/* "_wikis/$wiki_name/"
            
            # Inyectar front matter
            find "_wikis/$wiki_name" -name "*.md" -exec sed -i "1s/^/---\nlayout: default\ntitle: \"P√°gina Wiki\"\nwiki_source: $wiki_name\n---\n/" {} \;
            
            # Normalizar nombres
            find "_wikis/$wiki_name" -name "* *" -exec rename "s/ /-/g" {} \;
          done

      - name: Build Jekyll site
        run: |
          cd main-repo
          bundle exec jekyll build --config _config.yml --destination ../_site
          cd ..

      - name: Validate build
        run: |
          echo "üîç Generated content:"
          tree -L 3 _site/wiki
          grep -r "wiki_source" _site/wiki

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4